package ui;

import java.util.Arrays;

import generator.Parameter;
import generator.Parameter.StoryType;
import others.StoryInformation;
import storyFormat.StoryFormat;

/**
 *
 * @author liqimou
 */
public class AddWindow extends javax.swing.JFrame {

    /** Creates new form AddWindow */
    public AddWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	panel = new javax.swing.JPanel();
        startCptLabel = new javax.swing.JLabel();
        storyTypeLabel = new javax.swing.JLabel();
        goalCptLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        MCTSLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        lengthLabel = new javax.swing.JLabel();
        positiveCptLabel = new javax.swing.JLabel();
        negativeCptLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        storyTypeComboBox = new javax.swing.JComboBox<>();
        stateComboBox = new javax.swing.JComboBox<>();
        startCptTextField = new javax.swing.JTextField();
        goalCptTextField = new javax.swing.JTextField();
        lengthTextField = new javax.swing.JTextField();
        MCTSTextField = new javax.swing.JTextField();
        positiveCptTextField = new javax.swing.JTextField();
        negativeCptTextField = new javax.swing.JTextField();
        character1Label = new javax.swing.JLabel();
        character2Label = new javax.swing.JLabel();
        character1Information = new javax.swing.JLabel();
        character2Information = new javax.swing.JLabel();
        character1AddButton = new javax.swing.JButton();
        character2AddButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 550));

        startCptLabel.setText("Start Concept");

        storyTypeLabel.setText("Story Type");

        goalCptLabel.setText("Goal Concept");

        titleLabel.setText("Story Information");

        MCTSLabel.setText("#MCTS");

        stateLabel.setText("Start State");

        lengthLabel.setText("Perfer Length");

        positiveCptLabel.setText("Positive Concept");

        negativeCptLabel.setText("Negative Concept");

        character1Label.setText("Character 1");

        character2Label.setText("Character 2");
        
        if(Parameter.isAddWindow)
        	addButton.setText("Add");
        else 
        	addButton.setText("Revise");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        
        String[] storyType = new String[Parameter.StoryType.values().length];
        for(int i=0; i<Parameter.StoryType.values().length; i++){
        	storyType[i] = Parameter.StoryType.values()[i].name();
        }
        
        storyTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(storyType));
        storyTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storyTypeComboBoxActionPerformed(evt);
            }
        });
        
        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(Parameter.fabulaElement));
 
        if(!Parameter.isAddWindow){
        	storyTypeComboBox.setSelectedItem(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.storyGeneratedFormat.name());;
        	stateComboBox.setSelectedItem(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.startState);
        	startCptTextField.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.startConcept);
        	goalCptTextField.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.goalConcept);
        	MCTSTextField.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.MCTSNum+"");
        	lengthTextField.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.storylength+"");
        	positiveCptTextField.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.positiveConstraintString);
        	negativeCptTextField.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.negativeConstraintString);
            character1Information.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character1.getName()+" "+
            		Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character1.getGender());
            character2Information.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character2.getName()+" "+
            		Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character2.getGender());
        }
        
        //set enable of each component
        switch(Parameter.StoryType.valueOf(storyTypeComboBox.getSelectedItem().toString())){
    	case UNLIMITED_STORY:
    		startCptTextField.setEnabled(true);
    		goalCptTextField.setEnabled(false);
    		stateLabel.setText("Start State");
        	character2AddButton.setEnabled(false);
    	break;
    	case UNLIMITED_INVERSE_STORY:
    		startCptTextField.setEnabled(false);
    		goalCptTextField.setEnabled(true);
    		stateLabel.setText("End State");
        	character2AddButton.setEnabled(false);
        	break;
    	case TWO_CHARACTER_STORY:
    	case TWO_CHARACTER_STORY2:
        	startCptTextField.setEnabled(true);
        	goalCptTextField.setEnabled(true);
        	stateLabel.setText("Start State");
        	character2AddButton.setEnabled(true);
        	break;
        default :
        	startCptTextField.setEnabled(true);
        	goalCptTextField.setEnabled(true);
        	stateLabel.setText("Start State");
        	character2AddButton.setEnabled(false);
    	}

        character1AddButton.setText("+");
        character1AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                character1AddButtonActionPerformed(evt);
            }
        });

        character2AddButton.setText("+");
        character2AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                character2AddButtonActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(storyTypeLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(character1Label)
                                .addGap(18, 18, 18)
                                .addComponent(character1AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(character1Information, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(negativeCptLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(negativeCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(lengthLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(MCTSLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(MCTSTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                    .addComponent(goalCptLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(goalCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(stateLabel)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(157, 157, 157)
                                        .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(positiveCptLabel)
                                        .addComponent(startCptLabel))
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(positiveCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelLayout.createSequentialGroup()
                                            .addGap(52, 52, 52)
                                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(titleLabel)
                                                .addComponent(storyTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(startCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(addButton)
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(character2Label)
                                    .addGap(18, 18, 18)
                                    .addComponent(character2AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(23, 23, 23)
                                    .addComponent(character2Information, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 30, Short.MAX_VALUE))))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storyTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(storyTypeLabel))
                .addGap(15, 15, 15)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startCptLabel)
                    .addComponent(startCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goalCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goalCptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MCTSLabel)
                    .addComponent(MCTSTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthLabel))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positiveCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(positiveCptLabel))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(negativeCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(negativeCptLabel))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(character1Label)
                    .addComponent(character1Information, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(character1AddButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(character2Label)
                    .addComponent(character2Information)
                    .addComponent(character2AddButton))
                .addGap(18, 18, 18)
                .addComponent(addButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold> 
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	StoryFormat sf = new StoryFormat(Parameter.StoryType.values()[storyTypeComboBox.getSelectedIndex()], 
    			Integer.parseInt(MCTSTextField.getText()), 
    			Integer.parseInt(lengthTextField.getText()), 
    			startCptTextField.getText(), 
    			stateComboBox.getSelectedItem().toString(), 
    			goalCptTextField.getText(),
    			positiveCptTextField.getText(),
    			negativeCptTextField.getText(),
    			Parameter.character1,
    			Parameter.character2
    			) ;
    	if(Parameter.isAddWindow){
    		Parameter.storyInformation.add(new StoryInformation(sf));
    	}else{
    		Parameter.storyInformation.remove(Parameter.reviseStoryIndex);
    		Parameter.storyInformation.add(Parameter.reviseStoryIndex, new StoryInformation(sf));
    	}
    	Parameter.mainWindow.showStoryList();
    	dispose();
        // TODO add your handling code here:
    }                                         
    
    private void storyTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
    	switch(Parameter.StoryType.valueOf(storyTypeComboBox.getSelectedItem().toString())){
    	case UNLIMITED_STORY:
    		startCptTextField.setEnabled(true);
    		goalCptTextField.setEnabled(false);
    		stateLabel.setText("Start State");
        	character2AddButton.setEnabled(false);
    	break;
    	case UNLIMITED_INVERSE_STORY:
    		startCptTextField.setEnabled(false);
    		goalCptTextField.setEnabled(true);
    		stateLabel.setText("End State");
        	character2AddButton.setEnabled(false);
        	break;
    	case TWO_CHARACTER_STORY:
    	case TWO_CHARACTER_STORY2:
        	startCptTextField.setEnabled(true);
        	goalCptTextField.setEnabled(true);
        	stateLabel.setText("Start State");
        	character2AddButton.setEnabled(true);
        	break;
        default :
        	startCptTextField.setEnabled(true);
        	goalCptTextField.setEnabled(true);
        	stateLabel.setText("Start State");
        	character2AddButton.setEnabled(false);
    	}
    }                                                                                     

    private void character1AddButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
    	character1Information.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character1.getName()+" "+
        		Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character1.getGender());
    }                                                   

    private void character2AddButtonActionPerformed(java.awt.event.ActionEvent evt) {    
        character2Information.setText(Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character2.getName()+" "+
        		Parameter.storyInformation.get(Parameter.reviseStoryIndex).storyformat.character2.getGender());
    }     
                                         

    /**
     * @param args the command line arguments
     */
    public void openWindow() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddWindow().setVisible(true);
            }
        });
    }

 // Variables declaration - do not modify                     
    private javax.swing.JButton character1AddButton;
    private javax.swing.JLabel character1Information;
    private javax.swing.JLabel character1Label;
    private javax.swing.JButton character2AddButton;
    private javax.swing.JLabel character2Information;
    private javax.swing.JLabel character2Label;
    private javax.swing.JLabel MCTSLabel;
    private javax.swing.JTextField MCTSTextField;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel goalCptLabel;
    private javax.swing.JTextField goalCptTextField;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JTextField lengthTextField;
    private javax.swing.JLabel negativeCptLabel;
    private javax.swing.JTextField negativeCptTextField;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel positiveCptLabel;
    private javax.swing.JTextField positiveCptTextField;
    private javax.swing.JLabel startCptLabel;
    private javax.swing.JTextField startCptTextField;
    private javax.swing.JComboBox<String> stateComboBox;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JComboBox<String> storyTypeComboBox;
    private javax.swing.JLabel storyTypeLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration                      

}
