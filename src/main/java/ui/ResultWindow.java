package ui;

import java.text.DecimalFormat;

import generator.Parameter;
import generator.Parameter.StoryType;
import others.StoryRecord;
import template.HumorStoryTemplate;
import template.LongStoryTemplate;
import template.StartToGoalStoryTemplate;
import template.TwoCharacterStoryTemplate;
import template.TwoCharacterStoryTemplate2;
import template.UnlimitedInverseStoryTemplate;
import template.UnlimitedStoryTemplate;

/**
 *
 * @author liqimou
 */
public class ResultWindow extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ResultWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        resultLabel = new javax.swing.JLabel();
        storyTypeLabel = new javax.swing.JLabel();
        StoryTypeTextField = new javax.swing.JTextField();
        startCptLabel = new javax.swing.JLabel();
        StartCptTextField = new javax.swing.JTextField();
        stateLabel = new javax.swing.JLabel();
        startStateTextField = new javax.swing.JTextField();
        goalCptLabel = new javax.swing.JLabel();
        goalCptTextField = new javax.swing.JTextField();
        MCTSLabel = new javax.swing.JLabel();
        MCTSTextField = new javax.swing.JTextField();
        lengthLabel = new javax.swing.JLabel();
        lengthTextField = new javax.swing.JTextField();
        positiveCptLabel = new javax.swing.JLabel();
        positiveCptTextField = new javax.swing.JTextField();
        negativeCptLabel = new javax.swing.JLabel();
        negativeCptTextField = new javax.swing.JTextField();
        timeLabel = new javax.swing.JLabel();
        timeTextField = new javax.swing.JTextField();
        storyLabel = new javax.swing.JLabel();
        resultScrollPane = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        //setPreferredSize(new java.awt.Dimension(500, 600));

        resultLabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        resultLabel.setText("Result");

        storyTypeLabel.setText("Story Type :");

        StoryTypeTextField.setEditable(false);
        StoryTypeTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.storyGeneratedFormat+"");

        startCptLabel.setText("Start Concept :");

        StartCptTextField.setEditable(false);
        StartCptTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.startConcept);

        stateLabel.setText("Start State :");

        startStateTextField.setEditable(false);
        startStateTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.startState);

        goalCptLabel.setText("Goal Concept :");

        goalCptTextField.setEditable(false);
        goalCptTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.goalConcept);

        MCTSLabel.setText("#MCTS :");

        MCTSTextField.setEditable(false);
        MCTSTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.MCTSNum+"");

        lengthLabel.setText("Perfer Length :");

        lengthTextField.setEditable(false);
        lengthTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.storylength+"");

        positiveCptLabel.setText("Positive Concept :");

        positiveCptTextField.setEditable(false);
        positiveCptTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.positiveConstraintString+"");

        negativeCptLabel.setText("Negative Concept :");

        negativeCptTextField.setEditable(false);
        negativeCptTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.negativeConstraintString+"");

        timeLabel.setText("Excuted Time :");

        timeTextField.setEditable(false);
        timeTextField.setText(Parameter.storyInformation.get(Parameter.selectStoryIndex).generatingTime+"");

        storyLabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        storyLabel.setText("Story");

        showResultList();
        resultList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                resultListValueChanged(evt);
            }
        });
        resultScrollPane.setViewportView(resultList);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(resultLabel)
                        .addGap(272, 272, 272))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGap(0, 2, Short.MAX_VALUE))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(timeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(storyTypeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StoryTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(startCptLabel)
                                    .addComponent(stateLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(startStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MCTSLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MCTSTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lengthLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(StartCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(goalCptLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(goalCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(positiveCptLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(negativeCptLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(positiveCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(negativeCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(storyLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storyTypeLabel)
                    .addComponent(StoryTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startCptLabel)
                    .addComponent(goalCptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goalCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MCTSLabel)
                    .addComponent(stateLabel)
                    .addComponent(MCTSTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthLabel)
                    .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positiveCptLabel)
                    .addComponent(positiveCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(negativeCptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(negativeCptLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(storyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void resultListValueChanged(javax.swing.event.ListSelectionEvent evt) { 
	    if(evt.getValueIsAdjusting()){
			Parameter.selectStoryResultIndex = resultList.getSelectedIndex();
	    	if(Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.storyGeneratedFormat.equals(StoryType.TWO_CHARACTER_STORY) || 
	    			Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.storyGeneratedFormat.equals(StoryType.TWO_CHARACTER_STORY2) ||
	    			Parameter.storyInformation.get(Parameter.selectStoryIndex).storyformat.storyGeneratedFormat.equals(StoryType.TWO_CHARACTER_STORY3)
	    			){
	    		new TwoCharacterStoryShowingWindow().openWindow();
	    	}else{
				new OneCharacterStoryShowingWindow().openWindow();
	    	}
    	}
    }                                            

    public void showResultList(){
    	String[] strings = new String[Parameter.storyInformation.get(Parameter.selectStoryIndex).c1StoryList.size()];
     
    	for(int i=0; i<Parameter.storyInformation.get(Parameter.selectStoryIndex).c1StoryList.size(); i++){
			strings[i] = Parameter.decimalFormat.format(Parameter.storyInformation.get(Parameter.selectStoryIndex).c1StoryList.get(i).getScore()) + " " +
					Parameter.storyInformation.get(Parameter.selectStoryIndex).c1StorySequenceList.get(i);
		}
    	resultList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        resultScrollPane.setViewportView(resultList);
		
    	
    }
    
    /**
     * @param args the command line arguments
     */
    public void openWindow() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel MCTSLabel;
    private javax.swing.JTextField MCTSTextField;
    private javax.swing.JTextField StartCptTextField;
    private javax.swing.JTextField StoryTypeTextField;
    private javax.swing.JLabel goalCptLabel;
    private javax.swing.JTextField goalCptTextField;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JTextField lengthTextField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel negativeCptLabel;
    private javax.swing.JTextField negativeCptTextField;
    private javax.swing.JLabel positiveCptLabel;
    private javax.swing.JTextField positiveCptTextField;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JList<String> resultList;
    private javax.swing.JScrollPane resultScrollPane;
    private javax.swing.JLabel startCptLabel;
    private javax.swing.JTextField startStateTextField;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JLabel storyLabel;
    private javax.swing.JLabel storyTypeLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTextField timeTextField;
    // End of variables declaration                   
}
