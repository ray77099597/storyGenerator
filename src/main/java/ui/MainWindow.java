package ui;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.ListSelectionModel;

import org.apache.tools.ant.taskdefs.Javadoc.Html;

import generator.EssayGenerator;
import generator.Parameter;
import generator.StoryGenerator;
import others.StoryRecord;
import others.Character;
import others.StoryInformation;
import storyFormat.StoryFormat;

/**
 *
 * @author liqimou
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        storyScrollPane = new javax.swing.JScrollPane();
        storyList = new javax.swing.JList<>();
        resultScrollPane = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList<>();
        addButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        reviseButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        titleLabel.setText("Story to Run");

        resultLabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        resultLabel.setText("Result");
        
        
        progressBar.setMinimum(0);
        progressBar.setStringPainted(true);
        
        storyList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        storyList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                storyListValueChanged(evt);
            }
        });
        showStoryList();

        resultList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        resultList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                resultListValueChanged(evt);
            }
        });
        
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        reviseButton.setText("Revise");
        reviseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviseButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        
        runButton.setEnabled(true);
    	stopButton.setEnabled(false);
    	addButton.setEnabled(true);
    	reviseButton.setEnabled(false);
    	deleteButton.setEnabled(false);
        
    	javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultScrollPane)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(titleLabel)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(storyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reviseButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reviseButton)
                        .addGap(10, 10, 10)
                        .addComponent(deleteButton))
                    .addComponent(storyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(runButton)
                        .addComponent(stopButton))
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	StoryGenerator sg = new StoryGenerator();
    	Parameter.stopRunning = false;
    	runButton.setEnabled(false);
    	stopButton.setEnabled(true);
		sg.start();
    }          
    
    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) { 
    	runButton.setEnabled(true);
    	stopButton.setEnabled(false);
    	Parameter.stopRunning = true;
    }                                     

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        Parameter.storyInformation.remove(storyList.getSelectedIndex());
        showStoryList();
    }                                            

    private void reviseButtonActionPerformed(java.awt.event.ActionEvent evt) { 
    	Parameter.isAddWindow = false;
    	Parameter.reviseStoryIndex = storyList.getSelectedIndex();
    	new AddWindow().openWindow();
    }                                            

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {   
    	Parameter.isAddWindow = true;
    	new AddWindow().openWindow();
    }

    public void storyFinishGenerating(){
    	runButton.setEnabled(true);
    	stopButton.setEnabled(false);
    }
    
    public void showStoryList(){
    	
    	deleteButton.setEnabled(false);
    	reviseButton.setEnabled(false);
    	
    	String[] strings = new String[Parameter.storyInformation.size()];
    	for(int i=0; i<Parameter.storyInformation.size(); i++){
    		switch(Parameter.storyInformation.get(i).storyformat.storyGeneratedFormat){
        	case UNLIMITED_STORY:
        		strings[i] = Parameter.storyInformation.get(i).storyformat.storyGeneratedFormat + 
				" " + Parameter.storyInformation.get(i).storyformat.MCTSNum + 
				" " + Parameter.storyInformation.get(i).storyformat.storylength + 
				" " + Parameter.storyInformation.get(i).storyformat.startConcept +
				" " + Parameter.storyInformation.get(i).storyformat.startState +
				" " + Parameter.storyInformation.get(i).storyformat.positiveConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.negativeConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.character1.getName();
        	break;
        	case UNLIMITED_INVERSE_STORY:
        		strings[i] = Parameter.storyInformation.get(i).storyformat.storyGeneratedFormat + 
				" " + Parameter.storyInformation.get(i).storyformat.MCTSNum + 
				" " + Parameter.storyInformation.get(i).storyformat.storylength + 
				" " + Parameter.storyInformation.get(i).storyformat.startState +
				" " + Parameter.storyInformation.get(i).storyformat.goalConcept +
				" " + Parameter.storyInformation.get(i).storyformat.positiveConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.negativeConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.character1.getName();
            break;
        	case TWO_CHARACTER_STORY:
        	case TWO_CHARACTER_STORY2:
        	case TWO_CHARACTER_STORY3:
        		strings[i] = Parameter.storyInformation.get(i).storyformat.storyGeneratedFormat + 
				" " + Parameter.storyInformation.get(i).storyformat.MCTSNum + 
				" " + Parameter.storyInformation.get(i).storyformat.storylength + 
				" " + Parameter.storyInformation.get(i).storyformat.startConcept +
				" " + Parameter.storyInformation.get(i).storyformat.startState +
				" " + Parameter.storyInformation.get(i).storyformat.goalConcept +
				" " + Parameter.storyInformation.get(i).storyformat.positiveConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.negativeConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.character1.getName() +
        		" " + Parameter.storyInformation.get(i).storyformat.character2.getName();
        		break;
            default :
            	strings[i] = Parameter.storyInformation.get(i).storyformat.storyGeneratedFormat + 
				" " + Parameter.storyInformation.get(i).storyformat.MCTSNum + 
				" " + Parameter.storyInformation.get(i).storyformat.storylength + 
				" " + Parameter.storyInformation.get(i).storyformat.startConcept +
				" " + Parameter.storyInformation.get(i).storyformat.startState +
				" " + Parameter.storyInformation.get(i).storyformat.goalConcept +
				" " + Parameter.storyInformation.get(i).storyformat.positiveConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.negativeConstraintString +
				" " + Parameter.storyInformation.get(i).storyformat.character1.getName();
        	}
    	}
    	
    	storyList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        storyScrollPane.setViewportView(storyList);
    }
    
    public void showResultList(){
    	
    	String[] strings = new String[Parameter.storyCnt+1];
    	for(int i=0; i<Parameter.storyCnt+1; i++){
    		String str = "Story " + (i+1) + " " + Parameter.storyInformation.get(i).storyformat.storyGeneratedFormat;
    		strings[i] = str;
    	}
    	
    	resultList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        resultScrollPane.setViewportView(resultList);
    }
    
    public void setProgressBarValue(int n){
    	progressBar.setValue(n);
    }
    
    public void setProgressBarMax(int n){
    	progressBar.setMinimum(0); 
    	progressBar.setMaximum(n);
    	progressBar.setValue(0);
    }
    
    private void storyListValueChanged(javax.swing.event.ListSelectionEvent evt) {   
    	if(storyList.getSelectedIndex()!=-1){
    		reviseButton.setEnabled(true);
    		deleteButton.setEnabled(true);
    	}else{
    		reviseButton.setEnabled(false);
    		deleteButton.setEnabled(false);
    	}
    }  
    
    private void resultListValueChanged(javax.swing.event.ListSelectionEvent evt) {  
    	
    	if(evt.getValueIsAdjusting()){
    		Parameter.selectStoryIndex = resultList.getSelectedIndex();
    		new ResultWindow().openWindow();
    	}
    } 
    
    private void initData(){
    	//load action map
		try {
			String SQL = "select * from " + Parameter.storyTeller_DBname + "." + Parameter.storyTeller_action_table;
			ResultSet rs;
			rs = Parameter.stm.executeQuery(SQL);
			rs.beforeFirst();
			while(rs.next()){
				if(rs.getInt(Parameter.storyTeller_action_outdegree) > 5){
					Parameter.actionHighOutdegreeSet.add(rs.getString(Parameter.storyTeller_action_concept));
				}
				Parameter.actionMap.put(rs.getString(Parameter.storyTeller_action_concept), rs.getInt(Parameter.storyTeller_action_type));
				Parameter.locationMap.put(rs.getString(Parameter.storyTeller_action_concept), rs.getInt(Parameter.storyTeller_action_location));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
    	Parameter.essayGenerator = new EssayGenerator();
    	Parameter.stopRunning = true;
    	runButton.setEnabled(true);
    	stopButton.setEnabled(false);
    	deleteButton.setEnabled(false);
    	reviseButton.setEnabled(false);
    	addButton.setEnabled(true);
    	Parameter.storyInformation.add(new StoryInformation(new StoryFormat(Parameter.StoryType.TWO_CHARACTER_STORY3, 200000, 12, "wake_up", "e", "go_home", "exercise,play_baseball,swim", "study,read,learn", Parameter.character1, Parameter.character2)));
//    	Parameter.storyInformation.add(new StoryInformation(new StoryFormat(Parameter.StoryType.TWO_CHARACTER_STORY, 1000000, 20, "wake_up", "e", "go_home", "exercise,play_baseball,swim", "study,read,learn", Parameter.character1, Parameter.character2)));
//    	Parameter.storyInformation.add(new StoryInformation(new StoryFormat(Parameter.StoryType.TWO_CHARACTER_STORY2, 1000000, 20, "wake_up", "e", "go_home", "exercise,play_baseball,swim", "study,read,learn", Parameter.character1, Parameter.character2)));
//    	Parameter.storyInformation.add(new StoryInformation(new StoryFormat(Parameter.StoryType.TWO_CHARACTER_STORY2, 1000000, 40, "wake_up", "e", "go_home", "exercise,play_baseball,swim", "study,read,learn", Parameter.character1, Parameter.character2)));
    	}
    
    /**
     * @param args the command line arguments
     */
    public void openWindow() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        initData();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	Parameter.mainWindow = new MainWindow();
    			Parameter.mainWindow.setVisible(true);
            }
        });
    }
boolean a = false;
    // Variables declaration - do not modify                     
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JList<String> resultList;
    private javax.swing.JScrollPane resultScrollPane;
    private javax.swing.JButton reviseButton;
    private javax.swing.JButton runButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JList<String> storyList;
    private javax.swing.JScrollPane storyScrollPane;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration                   
}
